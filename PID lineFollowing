#include <Smartcar.h>
Car car;
Odometer encoderLeft, encoderRight;
Gyroscope gyro;
long sensors_average;
int sensors_sum;
int position;
int set_point=1990;
int proportional, integral, derivative,last_proportional;
int error_value;
long sensors[] = {0, 0, 0, 0, 0};   // Array used to store 5 readings for the 5sensors.
int Kp=5, Ki=0, Kd=50;//tuned by testing 
int  right_speed=0, left_speed=0;
int  max_speed=80;
void setup(){
  Serial.begin(9600);
  encoderLeft.attach(2);
  encoderRight.attach(3);
  encoderLeft.begin();
  encoderRight.begin();
  gyro.begin();
  car.begin(encoderLeft, encoderRight, gyro);
  proportional=0, integral=0, derivative=0,last_proportional=0;
  error_value=0;
}
 
void loop(){
read();//get the current position 
pid();//get the correction vaule 
pidTurn();//tune the correction vaule
car.setMotorSpeed(right_speed, left_speed);//apply correction
Serial.println(error_value);
}
void read()
{
sensors_average = 0;
sensors_sum = 0;
 
for (int i = 0; i < 5; i++){
if(i==0)  sensors[i] = analogRead(A11);//sensors from left to right (0,1,2,3,4)
if(i==1)  sensors[i] = analogRead(A12);
if(i==2)  sensors[i] = analogRead(A8);
if(i==3)  sensors[i] = analogRead(A9);
if(i==4)  sensors[i] = analogRead(A10);
sensors_average += sensors[i] * i * 1000;   //Calculating the weighted mean
sensors_sum += int(sensors[i]);}            //Calculating sum of sensor readings
}
void pid()
{
position = int(sensors_average / sensors_sum);
proportional = position - set_point;
integral = integral + proportional;
derivative = proportional - last_proportional;
last_proportional = proportional;
 
error_value = int(proportional * Kp + integral * Ki + derivative * Kd);
}
void pidTurn()
{  //Restricting the error value between +256.
if (error_value< -256)
{ error_value = -256;
} 
if (error_value> 256)
{
error_value = 256;
}
//turning the car left or right depening of the err vaule wether it's <0 or >0  
if (error_value< 0)
{
right_speed = max_speed + error_value;
left_speed = max_speed;
}
else
{
right_speed = max_speed;
left_speed = max_speed - error_value;
}
}
